version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2004:202201-02
    environment:
      CLUSTER_NAME: atul-default
      AWS_DEFAULT_REGION: us-east-1
      PROD_IMAGE: justfixnyc/nycdb-k8s-loader:latest
      DEV_IMAGE: justfixnyc/nycdb-k8s-loader:dev
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: build base container
          # Note that we want to run `docker build` rather than `docker-compose build`
          # here to ensure that layers are cached properly. This works around
          # https://github.com/docker/compose/issues/883.
          command: |
            docker --version
            docker login --username=${DOCKER_USERNAME} --password=${DOCKER_PASSWORD}
            docker pull ${PROD_IMAGE}
            docker build --cache-from ${PROD_IMAGE} --target dev -t ${DEV_IMAGE} .
      - run:
          name: run tests
          command: |
            docker-compose --version
            cp .env.example .env
            docker-compose run app pytest
      - run:
          name: build and push production container (main branch only)
          command: |
            if [[ "${CIRCLE_BRANCH}" == "main" ]]; then
              docker build --cache-from ${PROD_IMAGE} --cache-from ${DEV_IMAGE} \
                --target prod -t ${PROD_IMAGE} .
              docker push ${PROD_IMAGE}
              docker-compose run \
                -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
                -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
                -e AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} \
                app python aws_schedule_tasks.py create ${CLUSTER_NAME}
            fi
